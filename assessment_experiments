{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7fd8708c",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-11-22T15:44:45.335338Z",
     "iopub.status.busy": "2024-11-22T15:44:45.334879Z",
     "iopub.status.idle": "2024-11-22T15:44:51.607046Z",
     "shell.execute_reply": "2024-11-22T15:44:51.605842Z"
    },
    "papermill": {
     "duration": 6.279742,
     "end_time": "2024-11-22T15:44:51.609601",
     "exception": false,
     "start_time": "2024-11-22T15:44:45.329859",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import json\n",
    "\n",
    "\n",
    "survey_data_path = \"/kaggle/input/stackoverflow-survey-2024/survey_results_public.csv\"        \n",
    "survey_schema_path = \"/kaggle/input/stackoverflow-survey-2024/survey_results_schema.csv\"\n",
    "sa_categories  =  {\n",
    "    \"Basic Information\": [\n",
    "        \"MainBranch\", \"Age\", \"Employment\", \"RemoteWork\", \"Check\", \"CodingActivities\"\n",
    "    ],\n",
    "    \"Education, Work, and Career\": [\n",
    "        \"EdLevel\", \"LearnCode\", \"LearnCodeOnline\", \"TechDoc\", \"YearsCode\", \n",
    "        \"YearsCodePro\", \"DevType\", \"OrgSize\", \"PurchaseInfluence\", \"BuyNewTool\", \n",
    "        \"BuildvsBuy\", \"TechEndorse\", \"Country\", \"Currency\", \"CompTotal\"\n",
    "    ],\n",
    "    \"Technology and Tech Culture\": [\n",
    "        \"Language\", \"Database\", \"Platform\", \"Webframe\", \"Embedded\", \"MiscTech\", \n",
    "        \"ToolsTech\", \"NEWCollabTools\", \"OpSys\", \"OfficeStackAsync\", \n",
    "        \"OfficeStackSync\", \"AISearchDev\"\n",
    "    ],\n",
    "    \"Stack Overflow Usage + Community\": [\n",
    "        \"NEWSOSites\", \"SOVisitFreq\", \"SOAccount\", \"SOPartFreq\", \"SOHow\", \"SOComm\"\n",
    "    ],\n",
    "    \"Artificial Intelligence\": [\n",
    "        \"AISelect\", \"AISent\", \"AIBen\", \"AIAcc\", \"AIComplex\", \"AITool\", \n",
    "        \"AINext\", \"AIThreat\", \"AIEthics\", \"AIChallenges\"\n",
    "    ],\n",
    "    \"Professional Developer Series (Optional)\": [\n",
    "        \"TBranch\", \"ICorPM\", \"WorkExp\", \"Knowledge\", \"Frequency\", \"TimeSearching\", \n",
    "        \"TimeAnswering\", \"Frustration\", \"ProfessionalTech\", \"ProfessionalCloud\", \n",
    "        \"ProfessionalQuestion\", \"Industry\", \"JobSat\", \"JobSatPoints\", \"SOTeamsUsage\"\n",
    "    ],\n",
    "    \"Final Questions\": [\"SurveyLength\", \"SurveyEase\"]\n",
    "}\n",
    "\n",
    "my_categories = {\n",
    "    \"Company Characteristics\": [\n",
    "        \"OrgSize\", \"PurchaseInfluence\", \"BuyNewTool\", \"BuildvsBuy\", \n",
    "        \"TechEndorse\", \"ProfessionalTech\", \"ProfessionalCloud\", \"Industry\"\n",
    "    ],\n",
    "    \"Demographics\": [\n",
    "        \"MainBranch\", \"Age\", \"Employment\", \"RemoteWork\", \"Country\", \"Currency\"\n",
    "    ],\n",
    "    \"Education\": [\n",
    "        \"EdLevel\", \"LearnCode\", \"LearnCodeOnline\", \"TechDoc\"\n",
    "    ],\n",
    "    \"Job Role\": [\n",
    "        \"DevType\", \"ICorPM\"\n",
    "    ],\n",
    "    \"Job Satisfaction\": [\n",
    "        \"JobSat\"\n",
    "    ],\n",
    "    \"Artificial Intelligence\": [\n",
    "        \"AISelect\", \"AISent\", \"AIBen\", \"AIAcc\", \"AIComplex\", \n",
    "        \"AITool\", \"AINext\", \"AIThreat\", \"AIEthics\", \"AIChallenges\"\n",
    "    ]\n",
    "}\n",
    "\n",
    "importance_levels = {\n",
    "    \"High\": [\n",
    "        \"MainBranch\", \"Age\", \"Employment\", \"RemoteWork\", \"Country\", \n",
    "        \"Currency\", \"DevType\", \"ICorPM\", \"JobSat\", \"YearsCode\", \n",
    "        \"YearsCodePro\", \"WorkExp\", \"CompTotal\"\n",
    "    ],\n",
    "    \"Medium\": [\n",
    "        \"OrgSize\", \"PurchaseInfluence\", \"Industry\", \"EdLevel\", \n",
    "        \"LearnCode\", \"LearnCodeOnline\", \"TechDoc\", \"CodingActivities\", \n",
    "        \"TimeSearching\", \"TimeAnswering\", \"Frustration\"\n",
    "    ],\n",
    "    \"Low\": [\n",
    "        \"BuyNewTool\", \"BuildvsBuy\", \"TechEndorse\", \"ProfessionalTech\", \n",
    "        \"ProfessionalCloud\", \"ProfessionalQuestion\"\n",
    "    ]\n",
    "}\n",
    "\n",
    "# SAVR - radio (done)\n",
    "# MAVR - checkbox (done)\n",
    "# DL - dropdown\n",
    "# SL - freetext\n",
    "# Likert - matrix option\n",
    "# HSLIDER - scale\n",
    "# NPS - score 1-10\n",
    "# VRTL - matrix score\n",
    "\n",
    "\n",
    "solution_col = \"CompTotal\"\n",
    "\n",
    "\n",
    "raw_survey_df = pd.read_csv(survey_data_path)\n",
    "all_cols = list(raw_survey_df.columns.values)\n",
    "\n",
    "schema_df = pd.read_csv(survey_schema_path)\n",
    "qname_to_sa_category = {qname: category for category, qnames in sa_categories.items() for qname in qnames}\n",
    "qname_to_my_category = {qname: category for category, qnames in my_categories.items() for qname in qnames}\n",
    "qname_to_importance = {qname: level for level, qnames in importance_levels.items() for qname in qnames}\n",
    "\n",
    "# Add the categories\n",
    "schema_df[\"SA Category\"] = schema_df[\"qname\"].map(qname_to_sa_category)\n",
    "schema_df[\"My Category\"] = schema_df[\"qname\"].map(qname_to_my_category)\n",
    "schema_df[\"Importance\"] = schema_df[\"qname\"].map(qname_to_importance)\n",
    "\n",
    "output_path = \"/kaggle/working/survey_results_schema_extended.csv\"\n",
    "schema_df.to_csv(output_path, index=False)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3a93952f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-22T15:44:51.615740Z",
     "iopub.status.busy": "2024-11-22T15:44:51.615365Z",
     "iopub.status.idle": "2024-11-22T15:44:51.665808Z",
     "shell.execute_reply": "2024-11-22T15:44:51.664592Z"
    },
    "papermill": {
     "duration": 0.056663,
     "end_time": "2024-11-22T15:44:51.668640",
     "exception": false,
     "start_time": "2024-11-22T15:44:51.611977",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['MainBranch', 'Age', 'Employment', 'RemoteWork', 'YearsCode', 'YearsCodePro', 'DevType', 'Country', 'Currency', 'CompTotal', 'ICorPM', 'WorkExp', 'JobSat']\n"
     ]
    }
   ],
   "source": [
    "\n",
    "# ignore matrix cols for now\n",
    "schema_df_important_cols = schema_df.loc[schema_df[\"type\"] != \"Matrix\"].dropna(subset=[\"force_resp\"])\n",
    "# only get those with importance = high\n",
    "schema_df_important_cols = schema_df_important_cols.loc[schema_df_important_cols['Importance'] == \"High\"]\n",
    "\n",
    "\n",
    "cols = schema_df_important_cols['qname'].tolist()\n",
    "print(cols)\n",
    "\n",
    "# remove empty salary\n",
    "survey_df = raw_survey_df.dropna(subset=[\"CompTotal\"])\n",
    "# survey_df[\"MainBranch\"].fillna(\"Unknown\")\n",
    "\n",
    "# survey_df = survey_df[cols]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a7fdc347",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-22T15:44:51.674544Z",
     "iopub.status.busy": "2024-11-22T15:44:51.674160Z",
     "iopub.status.idle": "2024-11-22T15:44:52.965016Z",
     "shell.execute_reply": "2024-11-22T15:44:52.963851Z"
    },
    "papermill": {
     "duration": 1.296779,
     "end_time": "2024-11-22T15:44:52.967681",
     "exception": false,
     "start_time": "2024-11-22T15:44:51.670902",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       ResponseId                      MainBranch              Age  \\\n",
      "37646       37647  I am a developer by profession  25-34 years old   \n",
      "30039       30040  I am a developer by profession  25-34 years old   \n",
      "52861       52862  I am a developer by profession  25-34 years old   \n",
      "51978       51979  I am a developer by profession  35-44 years old   \n",
      "19822       19823  I am a developer by profession  35-44 years old   \n",
      "15040       15041  I am a developer by profession  25-34 years old   \n",
      "1004         1005  I am a developer by profession  35-44 years old   \n",
      "38274       38275  I am a developer by profession  18-24 years old   \n",
      "21433       21434  I am a developer by profession  35-44 years old   \n",
      "7217         7218  I am a developer by profession  45-54 years old   \n",
      "\n",
      "                                              Employment  \\\n",
      "37646                                Employed, full-time   \n",
      "30039                                Employed, full-time   \n",
      "52861            Employed, full-time;Employed, part-time   \n",
      "51978  Independent contractor, freelancer, or self-em...   \n",
      "19822                                Employed, full-time   \n",
      "15040                                Employed, full-time   \n",
      "1004                                 Employed, full-time   \n",
      "38274                                Employed, full-time   \n",
      "21433  Employed, full-time;Independent contractor, fr...   \n",
      "7217   Independent contractor, freelancer, or self-em...   \n",
      "\n",
      "                                 RemoteWork   Check  \\\n",
      "37646                             In-person  Apples   \n",
      "30039                             In-person  Apples   \n",
      "52861                             In-person  Apples   \n",
      "51978                                Remote  Apples   \n",
      "19822                             In-person  Apples   \n",
      "15040                             In-person  Apples   \n",
      "1004                                 Remote  Apples   \n",
      "38274                                Remote  Apples   \n",
      "21433  Hybrid (some remote, some in-person)  Apples   \n",
      "7217                                 Remote  Apples   \n",
      "\n",
      "                                        CodingActivities  \\\n",
      "37646  Hobby;Professional development or self-paced l...   \n",
      "30039                                              Hobby   \n",
      "52861                            Freelance/contract work   \n",
      "51978  Contribute to open-source projects;Bootstrappi...   \n",
      "19822                                              Hobby   \n",
      "15040                                              Hobby   \n",
      "1004            Hobby;Contribute to open-source projects   \n",
      "38274                                              Hobby   \n",
      "21433  Bootstrapping a business;Professional developm...   \n",
      "7217                                               Hobby   \n",
      "\n",
      "                                               EdLevel  \\\n",
      "37646     Bachelor’s degree (B.A., B.S., B.Eng., etc.)   \n",
      "30039  Master’s degree (M.A., M.S., M.Eng., MBA, etc.)   \n",
      "52861     Bachelor’s degree (B.A., B.S., B.Eng., etc.)   \n",
      "51978  Master’s degree (M.A., M.S., M.Eng., MBA, etc.)   \n",
      "19822  Master’s degree (M.A., M.S., M.Eng., MBA, etc.)   \n",
      "15040  Master’s degree (M.A., M.S., M.Eng., MBA, etc.)   \n",
      "1004    Professional degree (JD, MD, Ph.D, Ed.D, etc.)   \n",
      "38274     Bachelor’s degree (B.A., B.S., B.Eng., etc.)   \n",
      "21433  Master’s degree (M.A., M.S., M.Eng., MBA, etc.)   \n",
      "7217   Master’s degree (M.A., M.S., M.Eng., MBA, etc.)   \n",
      "\n",
      "                                               LearnCode  \\\n",
      "37646  Other online resources (e.g., videos, blogs, f...   \n",
      "30039  Colleague;On the job training;Other online res...   \n",
      "52861  Books / Physical media;Colleague;On the job tr...   \n",
      "51978  Books / Physical media;On the job training;Oth...   \n",
      "19822  Books / Physical media;On the job training;Oth...   \n",
      "15040                             Books / Physical media   \n",
      "1004   Books / Physical media;Colleague;Other online ...   \n",
      "38274  Books / Physical media;On the job training;Oth...   \n",
      "21433  Books / Physical media;On the job training;Oth...   \n",
      "7217   Other online resources (e.g., videos, blogs, f...   \n",
      "\n",
      "                                         LearnCodeOnline  ... JobSatPoints_6  \\\n",
      "37646  Technical documentation;Written Tutorials;Stac...  ...           90.0   \n",
      "30039  Technical documentation;Blogs;Written Tutorial...  ...           30.0   \n",
      "52861  Technical documentation;Blogs;Stack Overflow;H...  ...            NaN   \n",
      "51978  Technical documentation;Stack Overflow;Coding ...  ...            NaN   \n",
      "19822  Technical documentation;Blogs;Written Tutorial...  ...            NaN   \n",
      "15040                                                NaN  ...            NaN   \n",
      "1004   Technical documentation;Blogs;Books;Written Tu...  ...            NaN   \n",
      "38274  Books;Stack Overflow;Video-based Online Course...  ...           80.0   \n",
      "21433             Blogs;Books;Social Media;How-to videos  ...           20.0   \n",
      "7217   Technical documentation;Blogs;Written Tutorial...  ...            NaN   \n",
      "\n",
      "      JobSatPoints_7 JobSatPoints_8 JobSatPoints_9 JobSatPoints_10  \\\n",
      "37646           95.0           90.0           90.0            85.0   \n",
      "30039            0.0           20.0           50.0             0.0   \n",
      "52861            NaN            NaN            NaN             NaN   \n",
      "51978            NaN            NaN            NaN             NaN   \n",
      "19822            NaN            NaN            NaN             NaN   \n",
      "15040            NaN            NaN            NaN             NaN   \n",
      "1004             NaN            NaN            NaN             NaN   \n",
      "38274           80.0           90.0           90.0            90.0   \n",
      "21433            0.0            0.0            0.0             0.0   \n",
      "7217             NaN            NaN            NaN             NaN   \n",
      "\n",
      "      JobSatPoints_11           SurveyLength                  SurveyEase  \\\n",
      "37646            85.0  Appropriate in length  Neither easy nor difficult   \n",
      "30039             0.0  Appropriate in length                        Easy   \n",
      "52861             NaN               Too long  Neither easy nor difficult   \n",
      "51978             NaN  Appropriate in length                        Easy   \n",
      "19822             NaN  Appropriate in length  Neither easy nor difficult   \n",
      "15040             NaN  Appropriate in length                        Easy   \n",
      "1004              NaN  Appropriate in length                        Easy   \n",
      "38274           100.0  Appropriate in length                        Easy   \n",
      "21433             0.0  Appropriate in length  Neither easy nor difficult   \n",
      "7217              NaN               Too long                        Easy   \n",
      "\n",
      "      ConvertedCompYearly JobSat  \n",
      "37646              9697.0   10.0  \n",
      "30039             49407.0    8.0  \n",
      "52861                 NaN    NaN  \n",
      "51978                 NaN    NaN  \n",
      "19822            171850.0    NaN  \n",
      "15040             68740.0    NaN  \n",
      "1004              79481.0    NaN  \n",
      "38274              2500.0    9.0  \n",
      "21433            112674.0    6.0  \n",
      "7217              77332.0    NaN  \n",
      "\n",
      "[10 rows x 114 columns]\n"
     ]
    }
   ],
   "source": [
    "from sklearn.preprocessing import OneHotEncoder\n",
    "\n",
    "# MULTIPLE OPTION QUESTIONS\n",
    "\n",
    "# multiple_option_questions = schema_df.loc[(schema_df['selector'] == \"MAVR\") & (schema_df['force_resp'].notna())]['qname'].tolist()\n",
    "\n",
    "# multiple_option_questions_details = {}\n",
    "\n",
    "# for q in multiple_option_questions:\n",
    "#     # Use .loc for assigning filled values\n",
    "#     survey_df.loc[:, q] = survey_df[q].fillna(\"Unknown\")\n",
    "    \n",
    "#     # Get all unique options for the question\n",
    "#     unique_options = set(\n",
    "#         option.strip() \n",
    "#         for response in survey_df[q] \n",
    "#         for option in response.split(';') if isinstance(response, str)\n",
    "#     )\n",
    "#     unique_options_list = sorted(unique_options)\n",
    "#     multiple_option_questions_details[q] = unique_options_list\n",
    "\n",
    "#     # Create binary columns for each unique option\n",
    "#     for option in unique_options_list:\n",
    "#         # Use .loc for binary column creation\n",
    "#         survey_df.loc[:, option] = survey_df[q].apply(\n",
    "#             lambda x: 1 if isinstance(x, str) and option in x.split(\";\") else 0\n",
    "#         )\n",
    "\n",
    "# SINGLE OPTION QUESTIONS        \n",
    "        \n",
    "# encoder = OneHotEncoder(sparse_output=False)\n",
    "\n",
    "# single_option_questions = schema_df.loc[schema_df['selector'] == \"SAVR\"]['qname'].tolist()\n",
    "# single_option_questions.remove(\"SOTeamsUsage\")  # doesn't appear in data, come back to this        \n",
    "\n",
    "# encoded_data = encoder.fit_transform(survey_df[single_option_questions])\n",
    "# encoded_feature_names = encoder.get_feature_names_out(single_option_questions)\n",
    "# print(encoded_feature_names)\n",
    "# encoded_df = pd.DataFrame(encoded_data, columns=encoded_feature_names)\n",
    "# final_df = pd.concat([survey_df.drop(columns=single_option_questions), encoded_df], axis=1)\n",
    "\n",
    "# print(list(final_df.columns))\n",
    "\n",
    "survey_sample_df = survey_df.sample(n=10, random_state=42)\n",
    "\n",
    "\n",
    "print(survey_sample_df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "abb85aa4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-22T14:18:01.148066Z",
     "iopub.status.busy": "2024-11-22T14:18:01.147103Z",
     "iopub.status.idle": "2024-11-22T14:18:01.209557Z",
     "shell.execute_reply": "2024-11-22T14:18:01.208387Z",
     "shell.execute_reply.started": "2024-11-22T14:18:01.148023Z"
    },
    "papermill": {
     "duration": 0.002057,
     "end_time": "2024-11-22T15:44:52.972183",
     "exception": false,
     "start_time": "2024-11-22T15:44:52.970126",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5963963,
     "sourceId": 9742924,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30786,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 10.994362,
   "end_time": "2024-11-22T15:44:53.596854",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-11-22T15:44:42.602492",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
